<% layout("/layouts/boilerplate.ejs") %>

<style>
  .edit-profile-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 0 1rem;
  }

  .edit-profile-title {
    color: #2c3e50;
    font-size: 2.5rem;
    text-align: center;
    margin-bottom: 2rem;
    font-weight: 300;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .edit-profile-card {
    background: white;
    border-radius: 20px;
    padding: 2.5rem;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(0, 0, 0, 0.05);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
  }

  .edit-profile-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 5px;
    background: linear-gradient(90deg, #667eea, #764ba2, #f093fb, #f5576c);
    animation: gradientShift 3s ease-in-out infinite;
  }

  @keyframes gradientShift {
    0%, 100% {
      background: linear-gradient(90deg, #667eea, #764ba2, #f093fb, #f5576c);
    }
    50% {
      background: linear-gradient(90deg, #f5576c, #f093fb, #764ba2, #667eea);
    }
  }

  .profile-header-edit {
    display: flex;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 2px solid #f1f3f4;
  }

  .avatar-edit {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background: linear-gradient(135deg, #667eea, #764ba2);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 2rem;
    font-weight: bold;
    margin-right: 1.5rem;
    box-shadow: 0 8px 16px rgba(102, 126, 234, 0.3);
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }

  .avatar-edit:hover {
    transform: scale(1.05) rotate(3deg);
    box-shadow: 0 12px 24px rgba(102, 126, 234, 0.4);
  }

  .avatar-edit::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.5s;
  }

  .avatar-edit:hover::before {
    left: 100%;
  }

  .profile-info-edit {
    flex: 1;
  }

  .profile-name-edit {
    font-size: 1.8rem;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 0.5rem;
  }

  .profile-subtitle {
    color: #6c757d;
    font-size: 1rem;
    line-height: 1.5;
  }

  .form-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .form-label {
    font-size: 0.85rem;
    color: #6c757d;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 0.5rem;
    transition: color 0.3s ease;
  }

  .form-input, .form-select {
    width: 100%;
    padding: 1rem 1.2rem;
    border: 2px solid #e9ecef;
    border-radius: 12px;
    font-size: 1rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background: #f8f9fa;
    color: #2c3e50;
    font-weight: 500;
    position: relative;
  }

  .form-input:hover, .form-select:hover {
    border-color: #c5d0f7;
    background: #f0f2ff;
  }

  .form-input:focus, .form-select:focus {
    outline: none;
    border-color: #667eea;
    background: white;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    transform: translateY(-2px);
  }

  .form-input:focus + .form-label,
  .form-select:focus + .form-label {
    color: #667eea;
  }

  .form-select {
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 12px center;
    background-repeat: no-repeat;
    background-size: 16px;
    padding-right: 3rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .form-select option {
    padding: 0.5rem 1rem;
    background: white;
    color: #2c3e50;
    font-weight: 500;
    white-space: normal;
  }

  .required-field::after {
    content: ' *';
    color: #e74c3c;
    font-weight: bold;
  }

  .form-help {
    font-size: 0.8rem;
    color: #6c757d;
    margin-top: 0.5rem;
    font-style: italic;
    opacity: 0.8;
    transition: opacity 0.3s ease;
  }

  .form-group:hover .form-help {
    opacity: 1;
  }

  .actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 2.5rem;
    padding-top: 2rem;
    border-top: 2px solid #f1f3f4;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    padding: 1rem 2rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: none;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    min-width: 160px;
    justify-content: center;
  }

  .btn-primary {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
  }

  .btn-primary:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
    color: white;
    text-decoration: none;
  }

  .btn-primary:active {
    transform: translateY(-1px);
  }

  .btn-secondary {
    background: white;
    color: #667eea;
    border: 2px solid #667eea;
    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.1);
  }

  .btn-secondary:hover {
    background: #667eea;
    color: white;
    transform: translateY(-3px);
    text-decoration: none;
    box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
  }

  .btn-secondary:active {
    transform: translateY(-1px);
  }

  .btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }

  .btn:hover::before {
    left: 100%;
  }

  .btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
    box-shadow: none !important;
  }

  .btn-loading {
    position: relative;
  }

  .btn-loading::after {
    content: '';
    position: absolute;
    width: 16px;
    height: 16px;
    border: 2px solid currentColor;
    border-radius: 50%;
    border-right-color: transparent;
    animation: spin 1s linear infinite;
    margin-left: 8px;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .edit-profile-container {
      padding: 0 0.5rem;
      margin: 1rem auto;
    }

    .edit-profile-title {
      font-size: 2rem;
      margin-bottom: 1.5rem;
    }

    .edit-profile-card {
      padding: 2rem;
    }

    .profile-header-edit {
      flex-direction: column;
      text-align: center;
    }

    .avatar-edit {
      margin-right: 0;
      margin-bottom: 1rem;
    }

    .form-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .actions {
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;
    }

    .btn {
      width: 100%;
      max-width: 300px;
    }
  }

  @media (max-width: 480px) {
    .edit-profile-card {
      padding: 1.5rem;
      border-radius: 15px;
    }

    .edit-profile-title {
      font-size: 1.75rem;
    }

    .profile-name-edit {
      font-size: 1.5rem;
    }

    .form-input, .form-select {
      padding: 0.875rem 1rem;
    }

    .form-select {
      padding-right: 2.5rem;
    }

    .btn {
      padding: 0.875rem 1.5rem;
      font-size: 0.95rem;
    }

    .avatar-edit {
      width: 70px;
      height: 70px;
      font-size: 1.75rem;
    }
  }

  /* Focus indicators for accessibility */
  .btn:focus-visible {
    outline: 3px solid rgba(102, 126, 234, 0.5);
    outline-offset: 2px;
  }

  .form-input:focus-visible,
  .form-select:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.3);
  }

  /* Smooth page transitions */
  .edit-profile-card {
    animation: slideUp 0.6s ease-out;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Enhanced form validation styles */
  .form-input:invalid {
    border-color: #e74c3c;
  }

  .form-input:invalid:focus {
    border-color: #e74c3c;
    box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1);
  }

  .form-input:valid {
    border-color: #27ae60;
  }

  .form-input:valid:focus {
    border-color: #667eea;
  }
</style>

<div class="edit-profile-container">
  <h1 class="edit-profile-title">Edit Profile</h1>
  
  <div class="edit-profile-card">
    <div class="profile-header-edit">
      <div class="avatar-edit" onclick="triggerFileUpload()">
        <% if (user.name) { %>
          <%= user.name.split(' ').map(n => n[0]).join('').toUpperCase() %>
        <% } else { %>
          U
        <% } %>
      </div>
      <div class="profile-info-edit">
        <div class="profile-name-edit">
          <%= user.name || "Complete your profile" %>
        </div>
        <p class="profile-subtitle">Update your information to keep your profile current and help others connect with you</p>
      </div>
    </div>

    <form action="/profile/editprofile" method="POST" class="profile-form" id="profileForm">
      <div class="form-grid">
        <div class="form-group">
          <label class="form-label required-field">Full Name</label>
          <input 
            type="text" 
            name="name" 
            class="form-input"
            value="<%= user.name || '' %>" 
            required
            placeholder="Enter your full name"
            autocomplete="name"
            minlength="2"
            maxlength="50"
          >
          <div class="form-help">This will be displayed publicly on your profile</div>
        </div>

        <div class="form-group">
          <label class="form-label required-field">Email Address</label>
          <input 
            type="email" 
            name="email" 
            class="form-input"
            value="<%= user.email || '' %>" 
            required
            placeholder="your.email@university.edu"
            autocomplete="email"
          >
          <div class="form-help">Used for login and important notifications</div>
        </div>

        <div class="form-group">
          <label class="form-label required-field">Role</label>
          <select name="role" class="form-select" required>
            <option value="">Select your role</option>
            <option value="student" <%= user.role === 'student' ? 'selected' : '' %>>
              Student - Looking for guidance
            </option>
            <option value="alumni" <%= user.role === 'alumni' ? 'selected' : '' %>>
              Alumni - Offering mentorship
            </option>
          </select>
          <div class="form-help">Choose based on your current academic status</div>
        </div>
      </div>

      <div class="actions">
        <button type="submit" class="btn btn-primary" id="saveBtn">
          Save Changes
        </button>
        <a href="/profile" class="btn btn-secondary">Cancel</a>
      </div>
    </form>
  </div>
</div>

<script>
  // Form submission with enhanced loading state
  document.getElementById('profileForm').addEventListener('submit', function(e) {
    const saveBtn = document.getElementById('saveBtn');
    if (saveBtn.disabled) return;
    
    saveBtn.disabled = true;
    saveBtn.classList.add('btn-loading');
    saveBtn.innerHTML = 'Saving...';
    
    // Re-enable after timeout as fallback
    setTimeout(() => {
      saveBtn.disabled = false;
      saveBtn.classList.remove('btn-loading');
      saveBtn.innerHTML = 'Save Changes';
    }, 10000);
  });

  // Enhanced avatar upload functionality
  function triggerFileUpload() {
    // Create a file input element
    const fileInput = document.createElement('input');
    fileInput.type = 'file';
    fileInput.accept = 'image/*';
    fileInput.style.display = 'none';
    
    fileInput.onchange = function(e) {
      const file = e.target.files[0];
      if (file) {
        // You would implement actual upload logic here
        console.log('Selected file:', file.name);
        alert('Avatar upload functionality will be implemented soon!');
      }
    };
    
    document.body.appendChild(fileInput);
    fileInput.click();
    document.body.removeChild(fileInput);
  }

  // Enhanced form validation
  const form = document.getElementById('profileForm');
  const nameInput = form.querySelector('input[name="name"]');
  const emailInput = form.querySelector('input[name="email"]');
  const roleSelect = form.querySelector('select[name="role"]');

  // Real-time validation feedback
  nameInput.addEventListener('input', function() {
    if (this.value.length < 2) {
      this.setCustomValidity('Name must be at least 2 characters long');
    } else {
      this.setCustomValidity('');
    }
  });

  emailInput.addEventListener('input', function() {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(this.value)) {
      this.setCustomValidity('Please enter a valid email address');
    } else {
      this.setCustomValidity('');
    }
  });

  // Keyboard shortcuts
  document.addEventListener('keydown', function(e) {
    // Ctrl/Cmd + S to save
    if ((e.ctrlKey || e.metaKey) && e.key === 's') {
      e.preventDefault();
      document.getElementById('saveBtn').click();
    }
    
    // Escape to cancel
    if (e.key === 'Escape') {
      window.location.href = '/profile';
    }
  });

  // Auto-focus first input
  document.addEventListener('DOMContentLoaded', function() {
    nameInput.focus();
  });
</script>